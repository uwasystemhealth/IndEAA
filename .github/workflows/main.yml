# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Main CI Pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: false
        default: "warning"

jobs:
  frontend-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
      - uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --silent
          working-directory: client
      - name: Run Linting
        run: |
          ls
          npm run lint
        working-directory: client

  backend-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
      - uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --silent
          working-directory: server
      - name: Run Linting
        run: |
          ls
          npm run lint
        working-directory: server

  end-to-end-testing:
    needs: [frontend-check, backend-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
      - uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --silent
      - name: Run end-to-end-testing
        run: |
          ls
          npm run ci:test
        env:
          GOOGLE_TEST_USERNAME: ${{secrets.GOOGLE_TEST_USERNAME}}
          GOOGLE_TEST_PASSWORD: ${{secrets.GOOGLE_TEST_PASSWORD}}
          FRONTEND_REDIRECT_URL: ${{secrets.FRONTEND_REDIRECT_URL}}
          BACKEND_HOST_CALLBACK: ${{secrets.BACKEND_HOST_CALLBACK}}
          NEXT_PUBLIC_BACKEND_URL: ${{secrets.NEXT_PUBLIC_BACKEND_URL}}
      - name: Upload Results
        if: ${{ always() }}
        run: npm run allure:send
        env:
          ALLURE_USER: ${{secrets.ALLURE_USER}}
          ALLURE_PASSWORD: ${{secrets.ALLURE_PASSWORD}}
          ALLURE_API_SERVER: ${{secrets.ALLURE_API_SERVER}}


